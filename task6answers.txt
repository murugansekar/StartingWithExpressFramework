3. MVC is separations of concerns, to make sure different parts of the code do different things and for us to know clearly which part does which task.
Models: Models are basically objects or is a part of our code that is responsible for representing data in our code and allowing us to work with our data. Example like saving data, fetching data to or from a file should be handled by models.
Views: The views are responsible for what the user sees in their end, they are responsible for rendering the right content in our html documents and sending that back to the user.
Controllers: The connection point between the models and our views because since the views shouldn't care about the application logic and the models do care about how to save and fetch data and so on, the controllers are the thing working with the models, saving that data or triggering that save process and so on and also the part where they then pass that data that was fetched to our views. So the controller is the middleman, it contains the in-between logic. Controllers is just a design pattern to make the code readable.